{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "Description",
    "version": "1.0.0"
  },
  "host": "cse-341-project2-9tcn.onrender.com",
  "basePath": "/",
  "schemes": ["https"],
  "paths": {
    "/login": {
      "get": {
        "description": "Swagger documentation",
        "parameters": [],
        "responses": {}
      }
    },
    "/google": {
      "get": {
        "description": "Retrieve user information from Google.",
        "parameters": [],
        "responses": {}
      }
    },
    "/google/callback": {
      "get": {
        "description": "Handle the callback after authentication with Google.",
        "parameters": [],
        "responses": {}
      }
    },
    "/logout": {
      "get": {
        "description": "Log out the current user.",
        "parameters": [],
        "responses": {}
      }
    },
    "/api-docs": {
      "get": {
        "description": "Retrieve the Swagger API documentation.",
        "parameters": [],
        "responses": {}
      }
    },
    "/employee/": {
      "get": {
        "description": "Get all employees",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "description": "Create a new employee",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "John"
                },
                "lastName": {
                  "example": "Doe"
                },
                "email": {
                  "example": "johndoe@example.com"
                },
                "startDate": {
                  "example": "2023-05-13"
                },
                "title": {
                  "example": "Software Engineer"
                }
              },
              "required": ["firstName", "lastName", "email", "startDate", "title"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employee/{id}": {
      "get": {
        "description": "Get employee by ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update employee by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "John"
                },
                "lastName": {
                  "example": "Doe"
                },
                "email": {
                  "example": "johndoe@example.com"
                },
                "startDate": {
                  "example": "2023-05-13"
                },
                "title": {
                  "example": "Software Engineer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      },
      "delete": {
        "description": "Delete employee by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ticket/": {
      "get": {
        "description": "Get all tickets",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "description": "Create a new ticket",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "subject": {
                  "example": "Ticket subject"
                },
                "description": {
                  "example": "Ticket description"
                },
                "status": {
                  "example": "Not started"
                },
                "priority": {
                  "example": "High"
                },
                "assigned_to": {
                  "example": "Tech 1"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ticket/{id}": {
      "get": {
        "description": "Get a ticket by ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update a ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "example": "Ticket description"
                },
                "priority": {
                  "example": "High"
                },
                "assigned_to": {
                  "example": "Tech 2"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "Delete a ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "description": "Initiate Google authentication",
        "parameters": [],
        "responses": {}
      }
    },
    "/auth/google/callback": {
      "get": {
        "description": "Callback endpoint for Google authentication",
        "parameters": [],
        "responses": {}
      }
    },
    "/auth/logout": {
      "get": {
        "description": "Logout from the application",
        "parameters": [],
        "responses": {}
      }
    }
  }
}
